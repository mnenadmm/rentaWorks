version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev  # koristi za razvoj (otkomentari≈°i po potrebi)
      # dockerfile: Dockerfile.prod  # koristi za produkciju
    image: zadruga-backend:dev
    restart: unless-stopped
    volumes:
      - ./backend:/app  
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
       - postgres
    networks:
       - backend-net
       - frontend-net
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-net
   
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - backend-net
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    image: zadruga-client:dev
    restart: unless-stopped
    volumes:
      - ./client:/app
      - /app/node_modules
    # NEMA ports: - "4200:4200"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - frontend-net
  
  nginx:
    build:
      context: ./nginx
    image: zadruga-nginx:custom
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/dist:/usr/share/nginx/html
    depends_on:
      - client
      - backend
      - pgadmin
    networks:
      - frontend-net
      - backend-net



networks:
   backend-net:
   frontend-net:
volumes:
  postgres_data:
