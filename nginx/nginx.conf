# ===== GLOBALNA PODEŠAVANJA =====

user www-data;                        # Korisnik pod kojim nginx radi, na tvom serveru može biti i www-data ili root
worker_processes auto;              # Automatski bira broj procesa na osnovu CPU jezgara

error_log /var/log/nginx/error.log warn;  # Logovi grešaka (warn nivo)
pid /var/run/nginx.pid;

events {
    worker_connections 1024;        # Maksimalan broj istovremenih konekcija po radnom procesu
    use epoll;                      # Efikasan model događaja za Linux
    multi_accept on;                # Prihvata više konekcija u jednom eventu
}

http {
    # OSNOVNE SIGURNOSNE I PERFORMANSNE PODEŠAVANJA

    sendfile on;                   # Omogućava efikasno slanje fajlova
    tcp_nopush on;                 # Optimizacija TCP paketa pri slanju fajlova
    tcp_nodelay on;                # Smanjuje latenciju slanjem malih paketa odmah
    keepalive_timeout 65;          # Vreme koliko se održava HTTP keepalive konekcija (u sekundama)
    types_hash_max_size 2048;      # Veličina hash tabele za tipove fajlova (mime types)

    server_tokens off;             # Sakriva verziju nginx servera iz HTTP zaglavlja (za bezbednost)



    # GZIP KOMPRIMOVANJE - ubrzava prenos podataka i štedi bandwidth
    gzip on;
    gzip_disable "msie6"; 
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # ===== DEFINICIJA UPSTREAM SERVISA =====
    upstream frontend {
        server frontend      # Angular frontend kontejner
    }

    upstream backend {
        server backend:5000;        # Flask backend kontejner
    }

    upstream pgadmin {
        server pgadmin:80;          # pgAdmin kontejner
    }

    # ===== HTTP SERVER BLOK =====
    server {
        listen 80;
       #S server_name 5.75.164.111;  # Ovde stavi svoj domen kada budeš imao (ili IP)

        # Angular frontend
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Flask backend API na /api/
        location /api/ {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # pgAdmin dostupan na /pgadmin/
        location /pgadmin/ {
            proxy_pass http://pgadmin/;
            sub_filter '"/' '"/pgadmin/';
            sub_filter_once off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    # ===== HTTPS SERVER BLOK (zakomentarisan, koristi kada imaš SSL sertifikat) =====
    #
    # server {
    #     listen 443 ssl http2;
    #     server_name yourdomain.com;
    #
    #     ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers on;
    #     ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:..."; # mozeš koristiti preporučene ciphers iz dokumentacije
    #
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #
    #     # Redirect HTTP to HTTPS (ako koristiš i http server blok)
    #     error_page 497 https://$host$request_uri;
    #
    #     # Ostatak konfiguracije (isto kao i HTTP blok)
    #
    #     location / {
    #         proxy_pass http://frontend
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    #
    #     location /api/ {
    #         proxy_pass http://backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    #
    #     location /pgadmin/ {
    #         proxy_pass http://pgadmin/;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #
    #         sub_filter_once off;
    #         sub_filter '"/' '"/pgadmin/';
    #     }
    # }
}
